@{
    var alerts = new List<(string Message, string Type, string Icon)>();
    
    if (TempData["SuccessMessage"] != null)
        alerts.Add((TempData["SuccessMessage"].ToString(), "success", "bi-check-circle-fill"));
    
    if (TempData["ErrorMessage"] != null)
        alerts.Add((TempData["ErrorMessage"].ToString(), "danger", "bi-exclamation-triangle-fill"));
    
    if (TempData["WarningMessage"] != null)
        alerts.Add((TempData["WarningMessage"].ToString(), "warning", "bi-exclamation-circle-fill"));
    
    if (TempData["InfoMessage"] != null)
        alerts.Add((TempData["InfoMessage"].ToString(), "info", "bi-info-circle-fill"));
        
    if (!ViewData.ModelState.IsValid)
        alerts.Add(("Please fix the validation errors below.", "danger", "bi-exclamation-triangle-fill"));
}

@if (alerts.Any())
{
    <div class="alerts-container mb-4">
        @foreach (var alert in alerts)
        {
            <div class="alert alert-@alert.Type alert-dismissible fade show modern-alert" role="alert">
                <div class="d-flex align-items-center">
                    <div class="alert-icon me-3">
                        <i class="@alert.Icon"></i>
                    </div>
                    <div class="flex-grow-1">
                        @if (!ViewData.ModelState.IsValid && alert.Type == "danger")
                        {
                            <div class="fw-semibold mb-2">@alert.Message</div>
                            <ul class="mb-0 small">
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <li>@error.ErrorMessage</li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div class="alert-message">@alert.Message</div>
                        }
                    </div>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }
    </div>
}

<style>
.modern-alert {
    border: none;
    border-radius: 16px;
    padding: 20px;
    margin-bottom: 16px;
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.modern-alert::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.1) 100%);
}

.alert-success {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(5, 150, 105, 0.05) 100%);
    border-left: 4px solid #10b981;
    color: #065f46;
}

.alert-danger {
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.1) 0%, rgba(220, 38, 38, 0.05) 100%);
    border-left: 4px solid #ef4444;
    color: #991b1b;
}

.alert-warning {
    background: linear-gradient(135deg, rgba(245, 158, 11, 0.1) 0%, rgba(217, 119, 6, 0.05) 100%);
    border-left: 4px solid #f59e0b;
    color: #92400e;
}

.alert-info {
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(37, 99, 235, 0.05) 100%);
    border-left: 4px solid #3b82f6;
    color: #1e40af;
}

.alert-icon {
    font-size: 1.5rem;
    opacity: 0.8;
}

.alert-message {
    font-weight: 500;
    line-height: 1.5;
}

.btn-close {
    opacity: 0.5;
    transition: opacity 0.3s ease;
}

.btn-close:hover {
    opacity: 1;
}
</style>